name: FF Version Auto Bumper

on:
  workflow_call:
    inputs:
      ff-version-tag:
        type: string
        description: FF version tag requested to update the project to
        default: 'latest'
      project-name:
        type: string
        description: The name of the project in which is updating F!F version
        default: 'Zaakbrug'
      regex-for-dockerfile:
        type: string
        description: Regex to find the line in Dockerfile to update the F!F version
        default: '^ARG FF_VERSION=.*'
      replacement-for-dockerfile:
        type: string
        description: Replacement text to update F!F version in Dockerfile
        default: 'ARG FF_VERSION=${requested_image_version_tag}'
      dockerfile-path:
        type: string
        description: Dockerfile path
        default: './Dockerfile'
      regex-for-frankrunnerproperties:
        type: string
        description: Regex to find the line in frankrunner.properties file to update the F!F version
        default: '^ff.version=.*'
      replacement-for-frankrunnerproperties:
        type: string
        description: Replacement text to update F!F version in frankrunner.properties file
        default: 'ff.version=${requested_image_version_tag}'
      frankrunnerproperties-path:
        type: string
        description: frank-runner.properties file path
        default: './frank-runner.properties'
      regex-for-dockercompose:
        type: string
        description: Regex to find the line in docker-compose yml file to update the F!F version
        default: 'FF_VERSION:\s\${FF_VERSION:-.*'
      replacement-for-dockercompose:
        type: string
        description: Replacement text to update F!F version in docker-compose yml file
        default: 'FF_VERSION: \${FF_VERSION:-${requested_image_version_tag}}'
      dockercompose-path:
        type: string
        description: docker-compose yml file path
        default: './docker-compose.zaakbrug.dev.yml'
      frankconfig-path:
        type: string
        description: FrankConfig.xsd file path in main folder
        default: './src/main'
      frankconfigunderconfiguration-path:
        type: string
        description: FrankConfig.xsd file path under configuration folder
        default: './src/main/configurations'
      custom-file-paths-source:
        type: string
        description: |
          List of paths of the custom files in source code
          Example: '["parameters/Parameter.java", "another/path/File.java"]'
        default: '["parameters/Parameter.java"]'
      custom-file-paths-project:
        type: string
        description: |
          List of paths of the custom files in project repo
          Example: '["./src/main/java/org/frankframework/parameters/Parameter.java-orig", "./another/path/File.java"]'
        default: '["./src/main/java/org/frankframework/parameters/Parameter.java-orig"]'
    secrets:
      token:
        required: false
      dockerhub-username:
        required: false
      dockerhub-token:
        required: false

jobs:
  check-ff-version-and-update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.dockerhub-username }}
        password: ${{ secrets.dockerhub-token }}

    - name: Download Docker image with requested tag
      run: docker pull frankframework/frankframework:${{ inputs.ff-version-tag }}

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Get requested and current image tags of F!F
      run: |
        ff_image_inspect=$(docker inspect frankframework/frankframework:${{ inputs.ff-version-tag }})
        requested_image_version_tag=$(echo "$ff_image_inspect" | jq -r '.[0].Config.Labels."org.opencontainers.image.version"')
        echo "REQUESTED_IMAGE_VERSION_TAG=${requested_image_version_tag}" >> $GITHUB_ENV
        echo "Requested Image Version: ${requested_image_version_tag}"

        current_image_version_tag=$(grep -oP '(?<=^ARG FF_VERSION=).+' ./Dockerfile)
        echo "CURRENT_IMAGE_VERSION_TAG=${current_image_version_tag}" >> $GITHUB_ENV
        echo "Current Image Version: ${current_image_version_tag}"
      
    - name: Check if requested F!F version is different than current F!F version
      run: |
        if [ "${{ env.REQUESTED_IMAGE_VERSION_TAG }}" != "${{ env.CURRENT_IMAGE_VERSION_TAG }}" ]
          then
            echo "Requested F!F version is different than current F!F version. Applying it to ${{ inputs.project-name }} project."
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
        else
          echo "Requested F!F version is same as current F!F version. No action needed."
          echo "VERSION_CHANGED=false" >> $GITHUB_ENV
        fi

    - name: Update F!F version in required files
      if: ${{ env.VERSION_CHANGED }} == 'true'
      run: |
        sed -i "s/${{ inputs.regex-for-dockerfile }}/${{ inputs.replacement-for-dockerfile }}/" ${{ inputs.dockerfile-path }}
        sed -i "s/${{ inputs.regex-for-frankrunnerproperties }}/${{inputs.replacement-for-frankrunnerproperties}}/" ${{ inputs.frankrunnerproperties-path }}
        sed -i "s/${{inputs.regex-for-dockercompose}}/${{inputs.replacement-for-dockercompose}}/" ${{ inputs.dockercompose-path }}

    - name: Update FrankConfig.xsd files
      if: ${{ env.VERSION_CHANGED }} == 'true'
      run: |
        rm ${{ inputs.frankconfig-path }}/FrankConfig.xsd
        rm ${{ inputs.frankconfigunderconfiguration-path }}/FrankConfig.xsd
        wget -O parent.jar "https://nexus.frankframework.org/repository/releases/org/frankframework/frankframework-parent/${{ env.REQUESTED_IMAGE_VERSION_TAG }}/frankframework-parent-${{ env.REQUESTED_IMAGE_VERSION_TAG }}-frankdoc.jar"
        mkdir -p parent_temp_extract
        unzip -q parent.jar -d ./parent_temp_extract
        cp ./parent_temp_extract/xml/xsd/FrankConfig.xsd ${{ inputs.frankconfig-path }}
        cp ./parent_temp_extract/xml/xsd/FrankConfig.xsd ${{ inputs.frankconfigunderconfiguration-path }}
    
    - name: Update Custom Files
      if: ${{ env.VERSION_CHANGED }} == 'true'
      run: |
        wget -O source.jar "https://nexus.frankframework.org/repository/releases/org/frankframework/frankframework-core/${{ env.REQUESTED_IMAGE_VERSION_TAG }}/frankframework-core-${{ env.REQUESTED_IMAGE_VERSION_TAG }}-sources.jar"
        mkdir -p source_temp_extract
        unzip -q source.jar -d ./source_temp_extract

        for i in "${!custom_file_paths_source[@]}"
          do
            custom_file_source_path="${custom_file_paths_source[$i]}"
            custom_file_project_path="${custom_file_paths_project[$i]}"
            if cmp -s "source_temp_extract/org/frankframework/$custom_file_source_path" "$custom_file_project_path"
              then
                echo "$custom_file_source_path file hasn't been updated."
            else
              echo "$custom_file_source_path file has been updated. Copying the new version of $custom_file_source_path file to the $custom_file_project_path file in repository."
              cp "./source_temp_extract/org/frankframework/$custom_file_source_path" "$custom_file_project_path"
            fi
        done

    - name: Commit updated files
      if: ${{ env.VERSION_CHANGED }} == 'true'
      run: |
        git checkout master
        git checkout -b bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}
        git add ${{ inputs.dockerfile-path }}
        git add ${{ inputs.frankrunnerproperties-path }}
        git add ${{ inputs.dockercompose-path }}
        git add ${{ inputs.frankconfig-path }}/FrankConfig.xsd
        git add ${{ inputs.frankconfigunderconfiguration-path }}/FrankConfig.xsd
        for custom_file_project_path in "${!custom_file_paths_project[@]}"
          do
            git add "$custom_file_project_path"
        done
        git commit -m 'build(dependencies): bump f!f version to ${{ env.REQUESTED_IMAGE_VERSION_TAG }}'
        git push origin bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}
      
    - name: Docker Scout
      if: ${{ env.VERSION_CHANGED }} == 'true'
      id: docker-scout
      uses: docker/scout-action@v1
      with:
        command: compare
        image: frankframework/frankframework:${{ env.REQUESTED_IMAGE_VERSION_TAG }}
        to: frankframework/frankframework:${{ env.CURRENT_IMAGE_VERSION_TAG }}
        ignore-unchanged: true
        write-comment: false
        format: markdown
        github-token: ${{ secrets.token }}

    - name: Create Pull Request
      if: ${{ env.VERSION_CHANGED }} == 'true'
      env: 
        GH_TOKEN: ${{ secrets.token }}
      run: |
        gh pr create -B 'master' -H 'bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}' -b '${{ steps.docker-scout.outputs.compare }}' -t 'bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}'