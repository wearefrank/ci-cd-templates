name: FF Version Auto Bumper

on:
  workflow_call:
    inputs:
      ff-version-tag:
        type: string
        description: FF version tag requested to update the project to
        default: 'latest'
      regex-for-dockerfile:
        type: string
        description: Regex to find the line in Dockerfile to update the F!F version
        default: '^ARG FF_VERSION=.*'
      replacement-for-dockerfile:
        type: string
        description: Replacement text to update F!F version in Dockerfile
        default: 'ARG FF_VERSION='
      dockerfile-path:
        type: string
        description: Dockerfile path
        default: './Dockerfile'
      update-dockerfile-enabled:
        type: boolean
        description: Enable or disable the update of the Dockerfile
        default: true
      regex-for-frankrunnerproperties:
        type: string
        description: Regex to find the line in frankrunner.properties file to update the F!F version
        default: '^ff.version=.*'
      replacement-for-frankrunnerproperties:
        type: string
        description: Replacement text to update F!F version in frankrunner.properties file
        default: 'ff.version='
      frankrunnerproperties-path:
        type: string
        description: frank-runner.properties file path
        default: './frank-runner.properties'
      update-frankrunnerproperties-enabled:
        type: boolean
        description: Enable or disable the update of the frankrunner.properties file
        default: true
      regex-for-dockercompose:
        type: string
        description: Regex to find the line in docker-compose yml file to update the F!F version
        default: 'FF_VERSION:\s\${FF_VERSION:-.*'
      replacement-for-dockercompose:
        type: string
        description: Replacement text to update F!F version in docker-compose yml file
        default: 'FF_VERSION: \${FF_VERSION:-'
      dockercompose-path:
        type: string
        description: docker-compose yml file path
        default: './docker-compose.zaakbrug.dev.yml'
      update-dockercompose-enabled:
        type: boolean
        description: Enable or disable the update of the docker-compose file
        default: true
      configurations-folder-path:
        type: string
        description: configurations folder path
        default: './src/main/configurations'
      update-frankconfig-enabled:
        type: boolean
        description: Enable or disable the update of FrankConfig.xsd files
        default: true
      update-customcode-enabled:
        type: boolean
        description: Enable or disable the update of custom Parameter file
        default: false
    secrets:
      token:
        required: false
      dockerhub-username:
        required: false
      dockerhub-token:
        required: false

jobs:
  check-ff-version-and-update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with: 
        fetch-depth: 0

    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.dockerhub-username }}
        password: ${{ secrets.dockerhub-token }}

    - name: Download Docker image with requested tag
      run: docker pull frankframework/frankframework:${{ inputs.ff-version-tag }}

    - name: Configure Git
      run: |
        git config user.name "$GITHUB_ACTOR"
        git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

    - name: Get requested and current image tags of F!F
      run: |
        ff_image_inspect=$(docker inspect frankframework/frankframework:${{ inputs.ff-version-tag }})
        requested_image_version_tag=$(echo "$ff_image_inspect" | jq -r '.[0].Config.Labels."org.opencontainers.image.version"')
        echo "REQUESTED_IMAGE_VERSION_TAG=${requested_image_version_tag}" >> $GITHUB_ENV
        echo "Requested Image Version: ${requested_image_version_tag}"

        current_image_version_tag=$(awk -F'=' '/${{ inputs.regex-for-dockerfile }}/ {print $2}' ${{ inputs.dockerfile-path }})
        echo "CURRENT_IMAGE_VERSION_TAG=${current_image_version_tag}" >> $GITHUB_ENV
        echo "Current Image Version: ${current_image_version_tag}"
      
    - name: Check if requested F!F version is different than current F!F version
      run: |
        if [ "${{ env.REQUESTED_IMAGE_VERSION_TAG }}" != "${{ env.CURRENT_IMAGE_VERSION_TAG }}" ]
          then
            echo "Requested F!F version is different than current F!F version. Applying it to ${{ github.event.repository.name }} project."
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
        else
          echo "Requested F!F version is same as current F!F version. No action needed."
          echo "VERSION_CHANGED=false" >> $GITHUB_ENV
        fi

    - name: Checkout the new branch
      if: ${{ env.VERSION_CHANGED }} == 'true'
      run: |
        git checkout ${{ github.event.repository.default_branch }}
        git checkout -b bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}
    
    - name: Update F!F version in Dockerfile
      if: ${{ env.VERSION_CHANGED }} == 'true' && ${{ inputs.update-dockerfile-enabled }}
      run: |
        sed -i "s/${{ inputs.regex-for-dockerfile }}/${{ inputs.replacement-for-dockerfile }}${{ env.REQUESTED_IMAGE_VERSION_TAG }}/" ${{ inputs.dockerfile-path }}
        git add ${{ inputs.dockerfile-path }}
      continue-on-error: true

    - name: Update F!F version in frankrunner.properties
      if: ${{ env.VERSION_CHANGED }} == 'true' && ${{ inputs.update-frankrunnerproperties-enabled }}
      run: |
        sed -i "s/${{ inputs.regex-for-frankrunnerproperties }}/${{inputs.replacement-for-frankrunnerproperties}}${{ env.REQUESTED_IMAGE_VERSION_TAG }}/" ${{ inputs.frankrunnerproperties-path }}
        git add ${{ inputs.frankrunnerproperties-path }}
      continue-on-error: true

    - name: Update F!F version in docker-compose file
      if: ${{ env.VERSION_CHANGED }} == 'true' && ${{ inputs.update-dockercompose-enabled }}
      run: |
        sed -i "s/${{inputs.regex-for-dockercompose}}/${{inputs.replacement-for-dockercompose}}${{ env.REQUESTED_IMAGE_VERSION_TAG }}}/" ${{ inputs.dockercompose-path }}
        git add ${{ inputs.dockercompose-path }}
      continue-on-error: true

    - name: Update FrankConfig.xsd files
      if: ${{ env.VERSION_CHANGED }} == 'true' && ${{ inputs.update-frankconfig-enabled }}
      run: |
        wget -O parent.jar "https://repo1.maven.org/maven2/org/frankframework/frankframework-parent/${{ env.REQUESTED_IMAGE_VERSION_TAG }}/frankframework-parent-${{ env.REQUESTED_IMAGE_VERSION_TAG }}-frankdoc.jar" || \
        wget -O parent.jar "https://nexus.frankframework.org/repository/releases/org/frankframework/frankframework-parent/${{ env.REQUESTED_IMAGE_VERSION_TAG }}/frankframework-parent-${{ env.REQUESTED_IMAGE_VERSION_TAG }}-frankdoc.jar"
        mkdir -p parent_temp_extract
        unzip -q parent.jar -d ./parent_temp_extract
        find "${{ inputs.configurations-folder-path }}/.." -type f -name "FrankConfig.xsd" \( -path "${{ inputs.configurations-folder-path }}" -o -path "${{ inputs.configurations-folder-path }}/*" \) -exec sh -c '
          for frankconfig_path; do
            cp ./parent_temp_extract/xml/xsd/FrankConfig.xsd "$frankconfig_path"
            echo "Updated $frankconfig_path"
            git add "$frankconfig_path"
          done
        ' sh {} +
    
    - name: Update Parameter.java-orig file
      if: ${{ env.VERSION_CHANGED }} == 'true' && ${{ inputs.update-customcode-enabled }}
      run: |
        wget -O source.jar "https://repo1.maven.org/maven2/org/frankframework/frankframework-core/${{ env.REQUESTED_IMAGE_VERSION_TAG }}/frankframework-core-${{ env.REQUESTED_IMAGE_VERSION_TAG }}-sources.jar" || \
        wget -O source.jar "https://nexus.frankframework.org/repository/releases/org/frankframework/frankframework-core/${{ env.REQUESTED_IMAGE_VERSION_TAG }}/frankframework-core-${{ env.REQUESTED_IMAGE_VERSION_TAG }}-sources.jar"
        mkdir -p source_temp_extract
        unzip -q source.jar -d ./source_temp_extract
          if cmp -s source_temp_extract/org/frankframework/parameters/Parameter.java ./src/main/java/org/frankframework/parameters/Parameter.java-orig
            then
              echo "Parameter.java file hasn't been updated."
          else
            echo "Parameter.java file has been updated. Copying the new version of Parameter.java file to the Parameter.java-orig file in repository."
            cp ./source_temp_extract/org/frankframework/parameters/Parameter.java ./src/main/java/org/frankframework/parameters/Parameter.java-orig
          fi
        git add ./src/main/java/org/frankframework/parameters/Parameter.java-orig
      continue-on-error: true

    - name: Commit and push updated files
      if: ${{ env.VERSION_CHANGED }} == 'true'
      run: |
        git commit -m 'build(dependencies): bump f!f version to ${{ env.REQUESTED_IMAGE_VERSION_TAG }}'
        git push origin bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}
      continue-on-error: true

    - name: Docker Scout
      if: ${{ env.VERSION_CHANGED }} == 'true'
      id: docker-scout
      uses: docker/scout-action@v1
      with:
        command: compare
        image: frankframework/frankframework:${{ env.REQUESTED_IMAGE_VERSION_TAG }}
        to: frankframework/frankframework:${{ env.CURRENT_IMAGE_VERSION_TAG }}
        ignore-unchanged: true
        write-comment: false
        format: markdown
        github-token: ${{ secrets.token }}
      
    - name: Create Pull Request
      if: ${{ env.VERSION_CHANGED }} == 'true'
      env: 
        GH_TOKEN: ${{ secrets.token }}
      run: |
        gh pr create -B '${{ github.event.repository.default_branch }}' -H 'bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}' -b '${{ steps.docker-scout.outputs.compare }}' -t 'bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}' || \
        gh pr create -B '${{ github.event.repository.default_branch }}' -H 'bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}' -b 'The Docker Scout output was too long to include in this PR.' -t 'bump-f!f-version-to-${{ env.REQUESTED_IMAGE_VERSION_TAG }}'