name: "Docker Release - Generic"

on:
  workflow_call:
    inputs:
      registry-prefix:
        description: Image registry prefix (e.g. ghcr.io, docker.io)
        type: string
        required: false
        default: 'ghcr.io'
      docker-image-repo:
        description: Docker image repository. Default -> GitHub repository owner/organisation.
        type: string
        required: false
        default: ${{ github.repository_owner }}
      docker-image-name:
        description: Docker image name. Default -> GitHub repository name.
        type: string
        required: false
        default: ${{ github.event.repository.name }}
      version:
        type: string
        required: false
        description: Semvers string. If empty, the ref/tag will be used (if on.tag trigger).
        default: ''
      latest-tag:
        type: boolean
        required: false
        description: Add latest flavor
        default: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/') }}
    secrets:
      token:
        required: false
      registry-username:
        required: false
      registry-token:
        required: false
    outputs:
      image-id: 
        value: ${{ jobs.publish.outputs.image-id }}
      image-digest: 
        value: ${{ jobs.publish.outputs.image-digest }}
      image-metadata: 
        value: ${{ jobs.publish.outputs.image-metadata }}

jobs: 
  publish:
    runs-on: ubuntu-latest
    outputs:
      docker-meta-tags: ${{ steps.meta.outputs.tags }}
      docker-meta-labels: ${{ steps.meta.outputs.labels }}
      image-id: ${{ steps.build.outputs.imageid }}
      image-digest: ${{ steps.build.outputs.digest }}
      image-metadata: ${{ steps.build.outputs.metadata }}
    steps:
    - uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
      with:
        egress-policy: audit
        
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #4.2.2

    - name: "Download Pre-build Artifacts"
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 #5.0.0
      with:
        pattern: pre-build-*
        merge-multiple: true

    - name: "Download Build Artifacts"
      uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 #5.0.0
      with:
        pattern: build-*
        merge-multiple: true

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f #5.8.0
      with:
        images: ${{ inputs.registry-prefix }}/${{ inputs.docker-image-repo }}/${{ inputs.docker-image-name }}
        tags: |
          type=semver,pattern={{version}},value=${{ inputs.version }}
          type=semver,pattern={{major}}.{{minor}},value=${{ inputs.version }}
          type=semver,pattern={{major}},value=${{ inputs.version }}
          type=ref,event=pr
          type=raw,value=latest,enable=${{ inputs.latest-tag }}
        flavor: |
          latest=false

    - name: Set up QEMU
      uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 #3.6.0

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 #3.11.1

    - name: Login to Container Registry
      uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # 3.5.0
      with:
        registry: ${{ inputs.registry-prefix }}
        username: ${{ secrets.registry-username == '' && github.actor || secrets.registry-username }}
        password: ${{ secrets.registry-token == '' && inputs.registry-prefix == 'ghcr.io' && secrets.token || secrets.registry-token }}

    - name: Build and export Docker image
      id: build
      uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 #6.18.0
      with:
        context: .
        platforms: linux/amd64, linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        provenance: true
        sbom: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

